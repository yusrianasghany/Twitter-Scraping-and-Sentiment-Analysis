{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"authorship_tag":"ABX9TyNUVY5tmGV6kH0gD/vIIvTC"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"markdown","source":["#Penerapan TF-IDF dan K-Means pada Dataset Twitter tentang Kepolisian Indonesia"],"metadata":{"id":"qA66M5_p9vdt"}},{"cell_type":"markdown","source":["##Transform"],"metadata":{"id":"DdwYbt5W_K7D"}},{"cell_type":"markdown","source":["Import library yang diperlukan"],"metadata":{"id":"VEy5ufVM_joh"}},{"cell_type":"code","source":["from sklearn.feature_extraction.text import TfidfVectorizer\n","from sklearn.cluster import KMeans\n","from sklearn.decomposition import PCA\n","\n","# import other required libs\n","import pandas as pd\n","import numpy as np\n","\n","# string manipulation libs\n","import re\n","import string\n","import nltk\n","from nltk.corpus import stopwords\n","\n","# viz libs\n","import matplotlib.pyplot as plt\n","import seaborn as sns"],"metadata":{"id":"jz-ZVSXRPYMe","executionInfo":{"status":"ok","timestamp":1672101367414,"user_tz":-420,"elapsed":2028,"user":{"displayName":"Yusrian Asghany","userId":"00231672177225672223"}}},"execution_count":1,"outputs":[]},{"cell_type":"code","execution_count":2,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"q-7cSpY3O9FS","executionInfo":{"status":"ok","timestamp":1672101367415,"user_tz":-420,"elapsed":39,"user":{"displayName":"Yusrian Asghany","userId":"00231672177225672223"}},"outputId":"bea04729-641f-4943-b0a6-972bd1382576"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["(2647, 1)"]},"metadata":{},"execution_count":2}],"source":["df = pd.read_json('data_twitter.json', lines=True)\n","df.shape"]},{"cell_type":"code","source":["df = df.rename(columns={0: 'corpus'})\n","df.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"2LOm-YZVPma-","executionInfo":{"status":"ok","timestamp":1672101367415,"user_tz":-420,"elapsed":34,"user":{"displayName":"Yusrian Asghany","userId":"00231672177225672223"}},"outputId":"cb1d0f37-6ffe-43af-dd46-f393e67c7d76"},"execution_count":3,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                                              corpus\n","0  \"RT @Irwan2yah1: AKSI AROGAN PENGEMUDI PAJERO ...\n","1  \"RT @Irwan2yah1: AKSI AROGAN PENGEMUDI PAJERO ...\n","2  \"RT @Safira_Floran2: Ijin Cc mimin2 yang baik\\...\n","3  \"Ijin Cc mimin2 yang baik\\n \\ud83d\\ude4f\\ud83c...\n","4  \"RT @Irwan2yah1: AKSI AROGAN PENGEMUDI PAJERO ..."],"text/html":["\n","  <div id=\"df-7f10cfc6-cff2-4f91-8dc1-3dc10455f1c8\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>corpus</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>\"RT @Irwan2yah1: AKSI AROGAN PENGEMUDI PAJERO ...</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>\"RT @Irwan2yah1: AKSI AROGAN PENGEMUDI PAJERO ...</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>\"RT @Safira_Floran2: Ijin Cc mimin2 yang baik\\...</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>\"Ijin Cc mimin2 yang baik\\n \\ud83d\\ude4f\\ud83c...</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>\"RT @Irwan2yah1: AKSI AROGAN PENGEMUDI PAJERO ...</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-7f10cfc6-cff2-4f91-8dc1-3dc10455f1c8')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-7f10cfc6-cff2-4f91-8dc1-3dc10455f1c8 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-7f10cfc6-cff2-4f91-8dc1-3dc10455f1c8');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":3}]},{"cell_type":"code","source":["import nltk\n","from nltk.corpus import stopwords\n","nltk.download('stopwords')\n","\n","stopwords.words(\"indonesian\")[:10] # <-- import indonesian stopwords"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"F1vbhR0lQqy-","executionInfo":{"status":"ok","timestamp":1672101367416,"user_tz":-420,"elapsed":31,"user":{"displayName":"Yusrian Asghany","userId":"00231672177225672223"}},"outputId":"a13b4784-6fee-480a-b29f-31c5ee69f675"},"execution_count":4,"outputs":[{"output_type":"stream","name":"stderr","text":["[nltk_data] Downloading package stopwords to /root/nltk_data...\n","[nltk_data]   Unzipping corpora/stopwords.zip.\n"]},{"output_type":"execute_result","data":{"text/plain":["['ada',\n"," 'adalah',\n"," 'adanya',\n"," 'adapun',\n"," 'agak',\n"," 'agaknya',\n"," 'agar',\n"," 'akan',\n"," 'akankah',\n"," 'akhir']"]},"metadata":{},"execution_count":4}]},{"cell_type":"markdown","source":["Preprocessing Data dengan penghapusan beberapa karakter dan tokenisasi (TF-IDF)"],"metadata":{"id":"HZgcK7eB_tF3"}},{"cell_type":"code","source":["nltk.download('punkt')\n","def preprocess_text(text: str, remove_stopwords: bool) -> str:\n","    \"\"\"This utility function sanitizes a string by:\n","    - removing links\n","    - removing special characters\n","    - removing numbers\n","    - removing stopwords\n","    - transforming in lowercase\n","    - removing excessive whitespaces\n","    Args:\n","        text (str): the input text you want to clean\n","        remove_stopwords (bool): whether or not to remove stopwords\n","    Returns:\n","        str: the cleaned text\n","    \"\"\"\n","\n","    # remove links\n","    text = re.sub(r\"http\\S+\", \"\", text)\n","    # remove special chars and numbers\n","    text = re.sub(\"[^A-Za-z]+\", \" \", text)\n","    # remove stopwords\n","    if remove_stopwords:\n","        # 1. tokenize\n","        tokens = nltk.word_tokenize(text)\n","        # 2. check if stopword\n","        tokens = [w for w in tokens if not w.lower() in stopwords.words(\"indonesian\")]\n","        # 3. join back together\n","        text = \" \".join(tokens)\n","    # return text in lower case and stripped of whitespaces\n","    text = text.lower().strip()\n","    return text"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"0M3IwCuXRCAD","executionInfo":{"status":"ok","timestamp":1672101367972,"user_tz":-420,"elapsed":584,"user":{"displayName":"Yusrian Asghany","userId":"00231672177225672223"}},"outputId":"6791bf72-9832-4eee-8951-fdedde37ffb8"},"execution_count":5,"outputs":[{"output_type":"stream","name":"stderr","text":["[nltk_data] Downloading package punkt to /root/nltk_data...\n","[nltk_data]   Unzipping tokenizers/punkt.zip.\n"]}]},{"cell_type":"code","source":["df['cleaned'] = df['corpus'].apply(lambda x: preprocess_text(x, remove_stopwords=True))"],"metadata":{"id":"E9mxrXPTTxHU","executionInfo":{"status":"ok","timestamp":1672101388508,"user_tz":-420,"elapsed":20538,"user":{"displayName":"Yusrian Asghany","userId":"00231672177225672223"}}},"execution_count":6,"outputs":[]},{"cell_type":"code","source":["df.head(10)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":363},"id":"3pXjT72CT1rf","executionInfo":{"status":"ok","timestamp":1672101388509,"user_tz":-420,"elapsed":16,"user":{"displayName":"Yusrian Asghany","userId":"00231672177225672223"}},"outputId":"d7bb3370-13e5-4f4a-a69d-71512541697f"},"execution_count":7,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                                              corpus  \\\n","0  \"RT @Irwan2yah1: AKSI AROGAN PENGEMUDI PAJERO ...   \n","1  \"RT @Irwan2yah1: AKSI AROGAN PENGEMUDI PAJERO ...   \n","2  \"RT @Safira_Floran2: Ijin Cc mimin2 yang baik\\...   \n","3  \"Ijin Cc mimin2 yang baik\\n \\ud83d\\ude4f\\ud83c...   \n","4  \"RT @Irwan2yah1: AKSI AROGAN PENGEMUDI PAJERO ...   \n","5  \"RT @Irwan2yah1: AKSI AROGAN PENGEMUDI PAJERO ...   \n","6  \"RT @Irwan2yah1: AKSI AROGAN PENGEMUDI PAJERO ...   \n","7  \"RT @Irwan2yah1: AKSI AROGAN PENGEMUDI PAJERO ...   \n","8  \"RT @ResNgawi: Kepolisian Negara Republik Indo...   \n","9  \"RT @Irwan2yah1: AKSI AROGAN PENGEMUDI PAJERO ...   \n","\n","                                             cleaned  \n","0  rt irwan yah aksi arogan pengemudi pajero todo...  \n","1  rt irwan yah aksi arogan pengemudi pajero todo...  \n","2  rt safira floran ijin cc mimin n ud d ude f ud...  \n","3  ijin cc mimin n ud d ude f ud c uddee ud c udd...  \n","4  rt irwan yah aksi arogan pengemudi pajero todo...  \n","5  rt irwan yah aksi arogan pengemudi pajero todo...  \n","6  rt irwan yah aksi arogan pengemudi pajero todo...  \n","7  rt irwan yah aksi arogan pengemudi pajero todo...  \n","8  rt resngawi kepolisian negara republik indones...  \n","9  rt irwan yah aksi arogan pengemudi pajero todo...  "],"text/html":["\n","  <div id=\"df-5952e5b3-2fba-4436-8fc8-bb2338159e5c\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>corpus</th>\n","      <th>cleaned</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>\"RT @Irwan2yah1: AKSI AROGAN PENGEMUDI PAJERO ...</td>\n","      <td>rt irwan yah aksi arogan pengemudi pajero todo...</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>\"RT @Irwan2yah1: AKSI AROGAN PENGEMUDI PAJERO ...</td>\n","      <td>rt irwan yah aksi arogan pengemudi pajero todo...</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>\"RT @Safira_Floran2: Ijin Cc mimin2 yang baik\\...</td>\n","      <td>rt safira floran ijin cc mimin n ud d ude f ud...</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>\"Ijin Cc mimin2 yang baik\\n \\ud83d\\ude4f\\ud83c...</td>\n","      <td>ijin cc mimin n ud d ude f ud c uddee ud c udd...</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>\"RT @Irwan2yah1: AKSI AROGAN PENGEMUDI PAJERO ...</td>\n","      <td>rt irwan yah aksi arogan pengemudi pajero todo...</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>\"RT @Irwan2yah1: AKSI AROGAN PENGEMUDI PAJERO ...</td>\n","      <td>rt irwan yah aksi arogan pengemudi pajero todo...</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>\"RT @Irwan2yah1: AKSI AROGAN PENGEMUDI PAJERO ...</td>\n","      <td>rt irwan yah aksi arogan pengemudi pajero todo...</td>\n","    </tr>\n","    <tr>\n","      <th>7</th>\n","      <td>\"RT @Irwan2yah1: AKSI AROGAN PENGEMUDI PAJERO ...</td>\n","      <td>rt irwan yah aksi arogan pengemudi pajero todo...</td>\n","    </tr>\n","    <tr>\n","      <th>8</th>\n","      <td>\"RT @ResNgawi: Kepolisian Negara Republik Indo...</td>\n","      <td>rt resngawi kepolisian negara republik indones...</td>\n","    </tr>\n","    <tr>\n","      <th>9</th>\n","      <td>\"RT @Irwan2yah1: AKSI AROGAN PENGEMUDI PAJERO ...</td>\n","      <td>rt irwan yah aksi arogan pengemudi pajero todo...</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-5952e5b3-2fba-4436-8fc8-bb2338159e5c')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-5952e5b3-2fba-4436-8fc8-bb2338159e5c button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-5952e5b3-2fba-4436-8fc8-bb2338159e5c');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":7}]},{"cell_type":"code","source":["# initialize the vectorizer\n","vectorizer = TfidfVectorizer(sublinear_tf=True, min_df=5, max_df=0.95)\n","# fit_transform applies TF-IDF to clean texts - we save the array of vectors in X\n","X = vectorizer.fit_transform(df['cleaned'])"],"metadata":{"id":"3z92fg9-UKSc","executionInfo":{"status":"ok","timestamp":1672101388510,"user_tz":-420,"elapsed":13,"user":{"displayName":"Yusrian Asghany","userId":"00231672177225672223"}}},"execution_count":8,"outputs":[]},{"cell_type":"markdown","source":["##Penerapan K-Means untuk clustering"],"metadata":{"id":"bBkHec_WAEIV"}},{"cell_type":"code","source":["from sklearn.cluster import KMeans\n","\n","# initialize kmeans with 3 centroids\n","kmeans = KMeans(n_clusters=3, random_state=42)\n","# fit the model\n","kmeans.fit(X)\n","# store cluster labels in a variable\n","clusters = kmeans.labels_"],"metadata":{"id":"BxIE9B3xUgOZ","executionInfo":{"status":"ok","timestamp":1672101388511,"user_tz":-420,"elapsed":13,"user":{"displayName":"Yusrian Asghany","userId":"00231672177225672223"}}},"execution_count":9,"outputs":[]},{"cell_type":"code","source":["from sklearn.decomposition import PCA\n","\n","# initialize PCA with 2 components\n","pca = PCA(n_components=2, random_state=42)\n","# pass our X to the pca and store the reduced vectors into pca_vecs\n","pca_vecs = pca.fit_transform(X.toarray())\n","# save our two dimensions into x0 and x1\n","x0 = pca_vecs[:, 0]\n","x1 = pca_vecs[:, 1]"],"metadata":{"id":"mdYHM-KuUnCd","executionInfo":{"status":"ok","timestamp":1672101389186,"user_tz":-420,"elapsed":687,"user":{"displayName":"Yusrian Asghany","userId":"00231672177225672223"}}},"execution_count":10,"outputs":[]},{"cell_type":"code","source":["# assign clusters and pca vectors to our dataframe \n","df['cluster'] = clusters\n","df['x0'] = x0\n","df['x1'] = x1"],"metadata":{"id":"wirVH7PNVAfj","executionInfo":{"status":"ok","timestamp":1672101389187,"user_tz":-420,"elapsed":35,"user":{"displayName":"Yusrian Asghany","userId":"00231672177225672223"}}},"execution_count":11,"outputs":[]},{"cell_type":"code","source":["df.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"9es2YDdvVSc5","executionInfo":{"status":"ok","timestamp":1672101389188,"user_tz":-420,"elapsed":35,"user":{"displayName":"Yusrian Asghany","userId":"00231672177225672223"}},"outputId":"8bd14974-a095-4d10-da8a-37f8c8ebdd30"},"execution_count":12,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                                              corpus  \\\n","0  \"RT @Irwan2yah1: AKSI AROGAN PENGEMUDI PAJERO ...   \n","1  \"RT @Irwan2yah1: AKSI AROGAN PENGEMUDI PAJERO ...   \n","2  \"RT @Safira_Floran2: Ijin Cc mimin2 yang baik\\...   \n","3  \"Ijin Cc mimin2 yang baik\\n \\ud83d\\ude4f\\ud83c...   \n","4  \"RT @Irwan2yah1: AKSI AROGAN PENGEMUDI PAJERO ...   \n","\n","                                             cleaned  cluster        x0  \\\n","0  rt irwan yah aksi arogan pengemudi pajero todo...        2 -0.272441   \n","1  rt irwan yah aksi arogan pengemudi pajero todo...        2 -0.272441   \n","2  rt safira floran ijin cc mimin n ud d ude f ud...        2 -0.208071   \n","3  ijin cc mimin n ud d ude f ud c uddee ud c udd...        2 -0.212205   \n","4  rt irwan yah aksi arogan pengemudi pajero todo...        2 -0.272441   \n","\n","         x1  \n","0 -0.012843  \n","1 -0.012843  \n","2 -0.015040  \n","3  0.010082  \n","4 -0.012843  "],"text/html":["\n","  <div id=\"df-63a2972e-a35d-4ea5-b272-b61d8f6ac565\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>corpus</th>\n","      <th>cleaned</th>\n","      <th>cluster</th>\n","      <th>x0</th>\n","      <th>x1</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>\"RT @Irwan2yah1: AKSI AROGAN PENGEMUDI PAJERO ...</td>\n","      <td>rt irwan yah aksi arogan pengemudi pajero todo...</td>\n","      <td>2</td>\n","      <td>-0.272441</td>\n","      <td>-0.012843</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>\"RT @Irwan2yah1: AKSI AROGAN PENGEMUDI PAJERO ...</td>\n","      <td>rt irwan yah aksi arogan pengemudi pajero todo...</td>\n","      <td>2</td>\n","      <td>-0.272441</td>\n","      <td>-0.012843</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>\"RT @Safira_Floran2: Ijin Cc mimin2 yang baik\\...</td>\n","      <td>rt safira floran ijin cc mimin n ud d ude f ud...</td>\n","      <td>2</td>\n","      <td>-0.208071</td>\n","      <td>-0.015040</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>\"Ijin Cc mimin2 yang baik\\n \\ud83d\\ude4f\\ud83c...</td>\n","      <td>ijin cc mimin n ud d ude f ud c uddee ud c udd...</td>\n","      <td>2</td>\n","      <td>-0.212205</td>\n","      <td>0.010082</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>\"RT @Irwan2yah1: AKSI AROGAN PENGEMUDI PAJERO ...</td>\n","      <td>rt irwan yah aksi arogan pengemudi pajero todo...</td>\n","      <td>2</td>\n","      <td>-0.272441</td>\n","      <td>-0.012843</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-63a2972e-a35d-4ea5-b272-b61d8f6ac565')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-63a2972e-a35d-4ea5-b272-b61d8f6ac565 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-63a2972e-a35d-4ea5-b272-b61d8f6ac565');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":12}]},{"cell_type":"code","source":["def get_top_keywords(n_terms):\n","    \"\"\"This function returns the keywords for each centroid of the KMeans\"\"\"\n","    df = pd.DataFrame(X.todense()).groupby(clusters).mean() # groups the TF-IDF vector by cluster\n","    terms = vectorizer.get_feature_names_out() # access tf-idf terms\n","    for i,r in df.iterrows():\n","        print('\\nCluster {}'.format(i))\n","        print(','.join([terms[t] for t in np.argsort(r)[-n_terms:]])) # for each row of the dataframe, find the n terms that have the highest tf idf score\n","            \n","get_top_keywords(10)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"l_r1ZP8rVL6M","executionInfo":{"status":"ok","timestamp":1672101389189,"user_tz":-420,"elapsed":34,"user":{"displayName":"Yusrian Asghany","userId":"00231672177225672223"}},"outputId":"e2ddcd45-7a2f-4582-f427-9e61c561feb2"},"execution_count":13,"outputs":[{"output_type":"stream","name":"stdout","text":["\n","Cluster 0\n","damai,cselamat,menyertai,lilin,operasi,prokesnataru,langkah,mengiringi,patuhi,natal\n","\n","Cluster 1\n","kepolisian,rt,men,republik,indonesia,negara,damai,nsemoga,cselamat,natal\n","\n","Cluster 2\n","pelayanan,menggelar,disabilitas,divhumas,festival,kepolisian,police,art,rt,polri\n"]}]},{"cell_type":"code","source":["# map clusters to appropriate labels \n","cluster_map = {0: \"0\", 1: \"1\", 2: \"2\"}\n","# apply mapping\n","df['cluster'] = df['cluster'].map(cluster_map)"],"metadata":{"id":"Ywqq_nV0VZIF","executionInfo":{"status":"ok","timestamp":1672101389189,"user_tz":-420,"elapsed":31,"user":{"displayName":"Yusrian Asghany","userId":"00231672177225672223"}}},"execution_count":14,"outputs":[]},{"cell_type":"code","source":["# set image size\n","plt.figure(figsize=(12, 7))\n","# set a title\n","plt.title(\"TF-IDF + K-Means Pada Data Tweet Mengenai Kepolisian\", fontdict={\"fontsize\": 18})\n","# set axes names\n","plt.xlabel(\"X0\", fontdict={\"fontsize\": 16})\n","plt.ylabel(\"X1\", fontdict={\"fontsize\": 16})\n","# create scatter plot with seaborn, where hue is the class used to group the data\n","sns.scatterplot(data=df, x='x0', y='x1', hue='cluster', palette=\"viridis\")\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":467},"id":"TWjj1sQOVwFa","executionInfo":{"status":"ok","timestamp":1672101389190,"user_tz":-420,"elapsed":31,"user":{"displayName":"Yusrian Asghany","userId":"00231672177225672223"}},"outputId":"bef0dc48-ae35-4b1c-a45e-cfd0a9c6872c"},"execution_count":15,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 864x504 with 1 Axes>"],"image/png":"\n"},"metadata":{"needs_background":"light"}}]}]}